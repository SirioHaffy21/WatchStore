#pragma checksum "D:\FileOfSH\doan\App\WatchStore\WatchManageStore\WatchManageStore\Areas\Admin\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2fa7800d902622535265100f2e3b8bb70c96d447"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Dashboard_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Dashboard/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\FileOfSH\doan\App\WatchStore\WatchManageStore\WatchManageStore\Areas\Admin\Views\_ViewImports.cshtml"
using WatchManageStore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\FileOfSH\doan\App\WatchStore\WatchManageStore\WatchManageStore\Areas\Admin\Views\_ViewImports.cshtml"
using WatchManageStore.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2fa7800d902622535265100f2e3b8bb70c96d447", @"/Areas/Admin/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0897fb513dcf51d4d8d0f59fb37e263cfb4c8a06", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\FileOfSH\doan\App\WatchStore\WatchManageStore\WatchManageStore\Areas\Admin\Views\Dashboard\Index.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=row>
    <div class=""col-sm-6"">
        <div class=""card"">
            <div class=""card-header text-center"">
            Number post per month
            </div>
            <div class=""card-body"">
                 <canvas class=""my-4 h-25"" id=""myChart""></canvas>
            </div>
        </div>
    </div>
     <div class=""col-sm-6"">
        <div class=""card"">
            <div class=""card-header text-center"">
            Number star rate
            </div>
            <div class=""card-body"">
                 <canvas class=""my-4 h-25"" style=""width:300px !important;height:300px !important"" id=""myChartPie""></canvas>
            </div>
        </div>
    </div>
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script>
     $(function () {
         //load ds Store
         Load();
         //$('.table').DataTable();

     })
    function Load(){
        $.ajax({
            url:'/Admin/Dashboard/GetDashBoard',
            type:'get',
            success:function(data){
                const ctx1 = document.getElementById('myChart').getContext('2d');
                const myChart = new Chart(ctx1, {
                    type: 'bar',
                    data: {
                        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov','Dec'],
                        datasets: [{
                            label: 'Number Post per month',
                            data: [data.ds[0],data.ds[1],data.ds[2],data.ds[3],data.ds[4],data.ds[5],data.ds[6],data.ds[7],data.ds[8],data.ds[9],data.ds[10],data.ds[11]],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235,");
                WriteLiteral(@" 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    }
                });
                ///
                const ctx2 = document.getElementById('myChartPie').getContext('2d');
                const myChartPie = new Chart(ctx2, {
                    type: 'pie',
        ");
                WriteLiteral(@"            data: {
                        labels: ['One Star', 'Two Star', 'Three Star', 'Four Star', 'Five Star'],
                        datasets: [{
                            label: '# of Votes',
                            data: [data.dsNumber[0],data.dsNumber[1],data.dsNumber[2],data.dsNumber[3],data.dsNumber[4]],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba");
                WriteLiteral("(153, 102, 255, 1)\'\r\n                            ],\r\n                            borderWidth: 1\r\n                        }]\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n</script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
